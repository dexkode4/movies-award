[{"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/App.tsx":"1","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/MovieCard/index.tsx":"2","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/index.tsx":"3","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/MovieList/index.tsx":"4","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/API.ts":"5","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/SearchField/index.tsx":"6","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/pages/home/index.tsx":"7","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/context/favoriteContext.tsx":"8","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/MovieCard/MovieCard.components.tsx":"9","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/FavoriteCount/index.tsx":"10","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/pages/favlist/favlist.tsx":"11","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/pages/favlist/favlist.component.tsx":"12"},{"size":563,"mtime":1610894081380,"results":"13","hashOfConfig":"14"},{"size":1019,"mtime":1610834161840,"results":"15","hashOfConfig":"14"},{"size":463,"mtime":1610872035977,"results":"16","hashOfConfig":"14"},{"size":433,"mtime":1610833389103,"results":"17","hashOfConfig":"14"},{"size":372,"mtime":1610894589061,"results":"18","hashOfConfig":"14"},{"size":516,"mtime":1610740323356,"results":"19","hashOfConfig":"14"},{"size":1592,"mtime":1610894827744,"results":"20","hashOfConfig":"14"},{"size":1759,"mtime":1610922404732,"results":"21","hashOfConfig":"14"},{"size":440,"mtime":1610830429533,"results":"22","hashOfConfig":"14"},{"size":517,"mtime":1610868860900,"results":"23","hashOfConfig":"14"},{"size":2716,"mtime":1610890307907,"results":"24","hashOfConfig":"14"},{"size":1140,"mtime":1610887329006,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1644bw4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/App.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/MovieCard/index.tsx",[],["56","57"],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/index.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/MovieList/index.tsx",[],["58","59"],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/API.ts",[],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/SearchField/index.tsx",[],["60","61"],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/pages/home/index.tsx",["62"],"import React, { useEffect, useState } from 'react'\nimport { HalfCircleSpinner } from 'react-epic-spinners'\nimport styles from './home.module.scss';\nimport SearchField from '../../Components/SearchField';\nimport MovieList from '../../Components/MovieList';\nimport { getMovies } from '../../API';\n\n\nfunction useDebounce(value: string, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value, delay]\n    );\n    return debouncedValue;\n}\n\nfunction Home() {\n    const [responseData, setResponseData] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    const debouncedSearchTerm = useDebounce(query, 1000);\n\n    useEffect(() => {\n\n        if (debouncedSearchTerm) {\n            setIsLoading(true)\n            getMovies(query).\n                then(({ Search }) => {\n                    setResponseData(Search)\n                    setIsLoading(false)\n                })\n        }\n        else {\n            setResponseData([]);\n        }\n\n    }, [debouncedSearchTerm, query])\n\n    return (\n        <div className={styles.home}>\n            <SearchField setQuery={setQuery} />\n            {isLoading ? <div className={styles.loader}><HalfCircleSpinner color=\"red\" /> </div> : <MovieList movies={responseData} />}\n        </div>\n    )\n}\n\nexport default Home\n","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/context/favoriteContext.tsx",["63"],"import React, { createContext, useEffect, useMemo, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { IMovie, IContextValues } from '../interface';\n\n\n\nexport const favContext = createContext<IContextValues | null>(null);\n\n\ntype Propstype = {\n    children: React.ReactNode\n}\n\n\nconst FavContextProvider = ({ children }: Propstype) => {\n    const [favorites, setFavorites] = useState<IMovie[]>(() => {\n        const storage = localStorage.getItem(\"favs\");\n        return storage ? JSON.parse(storage) : [];\n    })\n    const [size, setSize] = useState(favorites.length);\n\n    useEffect(() => {\n        localStorage.setItem(\"favs\", JSON.stringify(favorites));\n    });\n\n    const addMovie = (payload: IMovie) => {\n\n        if (favorites.length >= 5) {\n            return toast.info(\"You can't nominate more than 5 movies\");\n        }\n        else {\n\n            if (!favorites.find((movie: IMovie) => movie.imdbID === payload.imdbID)) {\n                setFavorites([...favorites, payload])\n                setSize((prev) => prev + 1)\n            }\n            else {\n                return toast.error(\"Movie already nominated\");\n            }\n        }\n\n    };\n\n    const removeMovie = (payload: IMovie) => {\n        setFavorites((prevState) => prevState.filter((movie) => movie.imdbID !== payload.imdbID))\n        setSize((prev) => prev - 1)\n\n        return toast.error(\"Movie removed\");\n    };\n\n\n    const contextValue = useMemo(\n        () => ({\n            addMovie,\n            removeMovie,\n            favorites,\n            size\n        }),\n        [favorites]\n    );\n\n    return (\n        <favContext.Provider value={contextValue}>\n            {children}\n        </favContext.Provider>\n    )\n\n};\n\nexport default FavContextProvider;\n","/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/MovieCard/MovieCard.components.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/Components/FavoriteCount/index.tsx",[],["64","65"],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/pages/favlist/favlist.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/movies-award/src/pages/favlist/favlist.component.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"66","replacedBy":"72"},{"ruleId":"68","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":36,"column":29,"nodeType":"76","messageId":"77","endLine":36,"endColumn":30,"fix":"78"},{"ruleId":"79","severity":1,"message":"80","line":59,"column":9,"nodeType":"81","endLine":59,"endColumn":20,"suggestions":"82"},{"ruleId":"66","replacedBy":"83"},{"ruleId":"68","replacedBy":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],["85"],["86"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"87","text":"88"},"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'addMovie' and 'size'. Either include them or remove the dependency array.","ArrayExpression",["89"],["85"],["86"],"no-global-assign","no-unsafe-negation",[1062,1080],"\n                .",{"desc":"90","fix":"91"},"Update the dependencies array to be: [addMovie, favorites, size]",{"range":"92","text":"93"},[1575,1586],"[addMovie, favorites, size]"]